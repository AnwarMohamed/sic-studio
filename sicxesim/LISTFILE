SIC/XE Assembler
By Anwar Mohamed ~ 2491
anwarelmakrahy@gmail.com

1000        LOADER   START   1000               ABSOLUTE LOADER FOR SIC
            .
            . THIS LOADER READS AN OBJECT PROGRAM FROM DEVICE F2 AND LOADS IT
            . INTO MEMORY. THE HEADER RECORD FOR THE OBJECT PROGRAM IS NOT
            . PROCESSED. WHEN THE END RECORD IS READ, THE LOADER JUMPS TO
            . THE INDICATED STARTING ADDRESS.
            .
            . ERRORS IN THE OBJECT PROGRAM WILL RESULT IN AN ERROR HALT
            . (ON AN ILLEGAL INSTRUCTION TRAP). THE ADDRESS OF THE TRAP
            . (THE BYTES LABELLED HALT1 THROUGH HALT4) WILL INDICATE THE
            . TYPE OF ERROR DETECTED.
            .
            . REGISTER X = NEXT ADDRESS TO BE LOADED
            .
1000 4B2089          JSUB    READCHAR           READ FIRST CHARACTER
1003 2B20DC          COMP    HEADREC            CHECK FOR HEADER RECORD
1006 332001          JEQ     SKIPHEAD           CONTINUE IF HEADER IS PRESENT,
1009 FF     HALT1    BYTE    X'FF'              OTHERWISE HALT (NO HEADER)
100A 4B20C0 SKIPHEAD JSUB    SKIPEOL            SKIP THE REST OF THE HEADER
100D 4B207C PROCLOOP JSUB    READCHAR           READ FIRST CHAR OF NEXT RECORD
1010 2B20D2          COMP    TEXTREC            CHECK FOR TEXT RECORD
1013 332007          JEQ     PROCTEXT           
1016 2B20CF          COMP    ENDREC             CHECK FOR END RECORD
1019 332040          JEQ     PROCEND            
101C FF     HALT2    BYTE    X'FF'              ERROR HALT (UNKNOWN REC TYPE)
101D 4B2045 PROCTEXT JSUB    GETADDR            GET ADDRESS FROM TEXT RECORD
1020 0320C8          LDA     ZERO               
1023 4B2075          JSUB    GETD               GET FIRST HEX DIGIT OF LENGTH
1026 2320D4          MUL     K16                SHIFT LEFT 4 BITS
1029 0F20E1          STA     TEMP               SAVE SHIFTED VALUE
102C 4B206C          JSUB    GETD               GET SECOND HEX DIGIT OF LENGTH
102F 1B20DB          ADD     TEMP               COMBINE TO FORM LENGTH OF TEXT
1032 1B20D2          ADD     ADDRESS            ADD STARTING ADDRESS OF TEXT
1035 0F20D2          STA     LIMIT              SAVE RESULT AS LIMIT ADDRESS
1038 0720CC          LDX     ADDRESS            LOAD TEXT ADDRESS INTO REG X
103B 0320AD TEXTLOOP LDA     ZERO               
103E 4B205A          JSUB    GETD               GET FIRST DIGIT OF OBJECT BYTE
1041 2320B9          MUL     K16                SHIFT LEFT 4 BITS
1044 0F20C6          STA     TEMP               SAVE SHIFTED VALUE
1047 4B2051          JSUB    GETD               GET SECOND DIGIT OF OBJECT BYTE
104A 1B20C0          ADD     TEMP               COMBINE TO FORM BYTE VALUE
104D 578000          STCH    0,X                STORE IN MEMORY
1050 2F20B7          TIX     LIMIT              ADD 1 TO ADDRESS BEING LOADED
1053 3B2FE5          JLT     TEXTLOOP           LOOP UNTIL LIMIT REACHED
1056 4B2074          JSUB    SKIPEOL            SKIP REMINDER OF RECORD AND EOL
1059 3F2FB1          J       PROCLOOP           GO TO PROCESS NEXT RECORD
105C 4B2006 PROCEND  JSUB    GETADDR            GET ADDRESS FROM END RECORD
105F 0720A5          LDX     ADDRESS            LOAD INTO REGISTER X
1062 3F8000          J       0,X                JUMP TO STARTING ADDRESS
            .
            . THIS SUBROUTINE READS AN ADDRESS FROM AN OBJECT PROGRAM
            . RECORD (6 HEX DIGITS) AND STORES IT IN INTEGER FORM IN THE
            . VARIABLE NAMED ADDRESS.
            .
1065 1720A8 GETADDR  STL     RETGA              SAVE RETURN ADDRESS
1068 072080          LDX     ZERO               INITIALIZE ADDRESS TO ZERO
106B 132099          STX     ADDRESS            
106E 4B202A ADDRLOOP JSUB    GETD               GET HEX DIGIT OF ADDRESS
1071 0F2099          STA     TEMP               
1074 032090          LDA     ADDRESS            SHIFT ADDRESS LEFT 4 BITS
1077 232083          MUL     K16                
107A 1B2090          ADD     TEMP               ADD IN NEW HEX DIGIT VALUE
107D 0F2087          STA     ADDRESS            
1080 2F206E          TIX     K6                 LOOP UNTIL ALL 6 DIGITS
1083 3B2FE8          JLT     ADDRLOOP           HAVE BEEN PROCESSED
1086 0B2087          LDL     RETGA              RETURN TO CALLER
1089 4C              RSUB                       
            .
            . THIS SUBROUTINE READS THE NEXT CHARACTER OF THE OBJECT PROGRAM
            .
108C 03205C READCHAR LDA     ZERO               
108F E32074 READLOOP TD      INPUT              TEST INPUT DEVICE
1092 332FFA          JEQ     READLOOP           LOOP UNTIL READY
1095 DB206E          RD      INPUT              READ CHARACTER
1098 4C              RSUB                       RETURN TO CALLER
            .
            . THIS SUBROUTINE READS ONE CHARACTER FROM THE INPUT AND COVERTS
            . IT FROM ASCII CODE TO HEX DIGIT VALUE. THE CONVERTED HEX
            . DIGIT VALUE IS RETURNED IN REGISTER A
            .
109B 172075 GETD     STL     RETGD              SAVE RETURN ADDRESS
109E 4B2FEB GETDLOOP JSUB    READCHAR           READ CHARACTER
10A1 2B205C          COMP    HEX04              IF END OF FILE,
10A4 332024          JEQ     HALT3              GO TO ERROR HALT
10A7 2B2059          COMP    HEX30              COMPARE TO CHARACTER '0'
10AA 3B2FF1          JLT     GETDLOOP           SKIP CHARACTERS LESS THAN '0'
10AD 1F2053          SUB     HEX30              SUBTRACT HEX 30 FROM ASCII CODE
10B0 2B2044          COMP    K10                IF RESULT < 10, CONVERSION IS
10B3 3B200F          JLT     RETURN             COMPLETE. OTHERWISE, SUBTRACT
10B6 1F203B          SUB     K7                 7 MORE (FOR 'A' THROUGH 'F')
10B9 2B203B          COMP    K10                CHECK FOR ILLEGAL HEX DIGITS
10BC 3B200D          JLT     HALT4              GO TO ERROR HALT IF ILLEGAL
10BF 2B2038          COMP    K15                
10C2 372007          JGT     HALT4              
10C5 0B204B RETURN   LDL     RETGD              RETURN TO CALLER
10C8 4C              RSUB                       
10CB FF     HALT3    BYTE    X'FF'              ERROR HALT (PREMATURE EOF)
10CC FF     HALT4    BYTE    X'FF'              ERROR HALT (ILLEGAL HEX DIGIT)
            .
            . THIS SUBROUTINE SKIPS THE REST OF THE CURRENT OBJECT
            . PROGRAM RECORD, INCLUDING THE END-OF-LINE MARKER
            .
10CD 172046 SKIPEOL  STL     RETS               SAVE RETURN ADDRESS
10D0 4B2FB9 EOLLOOP  JSUB    READCHAR           READ CHARACTER
10D3 2B2015          COMP    ZERO               CHECK FOR END-OF-LINE
10D6 332003          JEQ     EXIT               EXIT IF END-OF-LINE FOUND
10D9 3F2FF4          J       EOLLOOP            LOOP
10DC 0B2037 EXIT     LDL     RETS               RETURN TO CALLER
10DF 4C              RSUB                       
10E2 000048 HEADREC  BYTE    X'000048'          CHARACTER 'H'
10E5 000054 TEXTREC  BYTE    X'000054'          CHARACTER 'T'
10E8 000045 ENDREC   BYTE    X'000045'          CHARACTER 'E'
10EB 000000 ZERO     WORD    0                  
10EE 000002 K2       WORD    2                  
10F1 000006 K6       WORD    6                  
10F4 000007 K7       WORD    7                  
10F7 00000A K10      WORD    10                 
10FA 00000F K15      WORD    15                 
10FD 000010 K16      WORD    16                 
1100 000004 HEX04    BYTE    X'000004'          END-OF-FILE
1103 000030 HEX30    BYTE    X'000030'          CHARACTER '0'
1106 F2     INPUT    BYTE    X'F2'              
1107        ADDRESS  RESW    1                  
110A        LIMIT    RESW    1                  
110D        TEMP     RESW    1                  
1110        RETGA    RESW    1                  
1113        RETGD    RESW    1                  
1116        RETS     RESW    1                  
1119                 END     LOADER             
